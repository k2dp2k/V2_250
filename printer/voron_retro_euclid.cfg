# This cfg contains all the necessary definitions, macros and settings to use the Euclid Probe and the Bedmount attached to the left side of the left bed extrusion.
#
# IÂ´m using this file on a Voron 2.4 250
#
# What it does? 
# It is using the Z-Endstop only to locate the Probedock, the real Z 0-Point is measured afterwards using the Euclid.
#
# The calculation of the Z 0 Point is done by 4 Measurements in the middle of the bed to get a better idea of the "real" height. 
# The result of this is an average out of the 4 Z heights
#
#		+++ Point location on the Bed +++
#		---------------------------------
#		|                               |
#		|                               |
#		|                               |
#       |                               |
#		|             *4 *3             |
#		|             *1 *2             |	
#		|                               |
#		|                               |
#		|                               |
#		|                               |
#		---------------------------------
#
# This is done using the following macros:
#		- G3201
#		- _CHECK_PROBE2
#		- _CHECK_PROBE3
#		- _CHECK_PROBE4
#		- _CHECK_PROBE5
#		- _CHECK_PROBE6
#
# There is also a "security mechanism" includes, that is checking the distance between Z-Endstop 0-Point and new probed 0-Point.
# If this distance is larger than 1mm the new Value will not be applied, and you will have to check your Probe / Nozzle or adapt your "variable_euclidZCompensation:"
#
#
# +++++++++++++++++++ The macros where all done by @rkolbi I(@k2dp2k) only adapted them to make it work in a simple way on a Voron 2.4 +++++++++++++++++++
#
#
#
# You need to disable the following sections in your existing printer.cfg
#
# [probe]
# [quad_gantry_level]
# [bed_mesh]
# [safe_z_home]
#
# Insert [include ./voron_retro_euclid.cfg] to your printer.cfg file
#
# Inside this cfg file you need to adapt the marked lines to your setup (<-----------)
#
[gcode_macro configvars]
#------------------------------------------------- Needed Values -------------------------------------------------- 
variable_euclidX: 0                # X Position directly over probe						<-----------
variable_euclidY: 248              # Y Position directly over probe						<-----------
variable_euclidSwipeX: 60             # X Position, swipe to the side to free probe of dock			<-----------
variable_euclidSafeDeployZ: 25         # Z Safe height for deployment approach					<-----------
variable_euclidSafeStowZ: 30           # Z Safe height following stowing the probe (break mag pull)		<-----------
variable_euclidDeployZ: 5            # Lower to just above probe, no physical contact				<-----------
variable_euclidStowZ: 3.0              # Lower to exact postion for dock entry/exit				<-----------
variable_defaultWarmNozzle: 160        #to get the biggest part of nozzle expansion compensated without oozing	<-----------
variable_name_mesh: 105                #Adapt to your default mesh name						<-----------

#------------------------------------------------ Z Compensation ------------------------------------------------- 
variable_euclidZCompensation: 10.195     # Z0 Compensation based off probe height				<-----------

# You also need to adapt your PRINT_START Macro, see marced Lines
#[gcode_macro PRINT_START]
#gcode: 
#    {% set bedtemp = params.BED|int %}
#    {% set hotendtemp = params.HOTEND|int %}
#    {% set chambertemp = params.CHAMBER|default(0)|int %}
#    {% set defaultWN = printer["gcode_macro configvars"].defaultwarmnozzle|int %}				<-----------
#    BED_MESH_CLEAR
#    SET_GCODE_OFFSET Z=0.0
#    G28
#    PARKCENTER                        
#    M104 S{defaultWN}  											<-----------
#    M190 S{bedtemp}                                                       
#    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={chambertemp}   
#    G3201    													<-----------
#    PARKCENTER
#    M109 S{hotendtemp} 
#    G1 X55 Y2 Z0.85 F12000;
#    G1 X85 Y2 E20 F100;
#    G1 X90 F18000;

gcode:

[force_move]
enable_force_move: true

[respond]
default_type: echo

[probe]
pin: ^PA3  # 													<-----------							
x_offset:  0  # 												<-----------
y_offset:  25 # 												<-----------
z_offset:  10.15 # 												<-----------
speed: 4.0
lift_speed: 10.0
samples: 5
samples_result: median
sample_retract_dist: 1.5
samples_tolerance: 0.0075
samples_tolerance_retries: 5

[quad_gantry_level]
gantry_corners:
	-60,-10 # 												<-----------
    310, 320 #												<-----------
points:
	50,25 # 												<-----------
	50,175 # 												<-----------
	200,175 # 												<-----------
	200,25 # 												<-----------
speed: 150
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075
max_adjust: 15

[bed_mesh]
speed: 150
horizontal_move_z: 15
mesh_min: 30, 30 # 												<-----------
mesh_max: 220,220 # 											<-----------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12
move_check_distance: 3
split_delta_z: 0.0125
mesh_pps: 2,2

[safe_z_home]
home_xy_position:177,253  # <-------------------------------Z-Endstop Position	
speed:100
z_hop:15

[delayed_gcode prerun]
initial_duration: 1
gcode:
    QUERY_PROBE
    M117 Printer online.


# M401 - Deploy Euclid Probe
[gcode_macro M401]
gcode:
    QUERY_PROBE
    {% if printer.probe.last_query %}
        M118 Fetching Euclid Probe.
        G28 Z
        _PROBE_DEPLOY
    {% else %}
        M118 ?!Probe is already attached.
    {% endif %}

# M402 - Stow Euclid Probe
[gcode_macro M402]
gcode:
    QUERY_PROBE
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        G28 Z
        _PROBE_STOW
    {% else %}
        M118 ?!Probe is not attached.
    {% endif %}


# Euclid Probe Safety Checks

#.................................................................................................................
[gcode_macro _do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
        {action_raise_error("ERROR: probe still deployed - remove and return to dock.")}
    {% else %}
        M118 Euclid Probe has been stowed.  
    {% endif %}
	
#.................................................................................................................
[gcode_macro _error_if_probe_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_deployed
	
#.................................................................................................................
[gcode_macro _do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
        {action_raise_error("ERROR: probe unsuccessfully deployed.")}
    {% else %}
        M118 Euclid Probe has been attached.
    {% endif %}
	
#.................................................................................................................
[gcode_macro _error_if_probe_not_deployed]
gcode:
    G4 P300
    QUERY_PROBE
    _do_error_if_probe_not_deployed

#.................................................................................................................
[gcode_macro _PROBE_DEPLOY]
gcode:
    G90
    G0 Z{printer["gcode_macro configvars"].euclidsafedeployz|float} F800
    G0 X{printer["gcode_macro configvars"].euclidx|float} Y{printer["gcode_macro configvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro configvars"].eucliddeployz|float} F800
    G0 X{printer["gcode_macro configvars"].euclidswipex|float} Y{printer["gcode_macro configvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro configvars"].euclidsafedeployz|float} F800
    _error_if_probe_not_deployed ; Verify probe attached

#.................................................................................................................
[gcode_macro _PROBE_STOW]
gcode:
    G90
    G0 X{printer["gcode_macro configvars"].euclidswipex|float} Y{printer["gcode_macro configvars"].euclidy|float} F3500
    G0 Z{printer["gcode_macro configvars"].euclidstowz|float} F500
    G0 X{printer["gcode_macro configvars"].euclidx|float} Y{printer["gcode_macro configvars"].euclidy|float} F1000
    G0 Z{printer["gcode_macro configvars"].euclidsafestowz|float} F800
    _error_if_probe_deployed ; Verify probe detached	
	
#.................................................................................................................
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_ORIGINIAL
gcode:
    QUERY_PROBE
    M401
    QUAD_GANTRY_LEVEL_ORIGINIAL
    M402

#.................................................................................................................
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_ORIGINIAL
gcode:
    QUERY_PROBE
    M401
    BED_MESH_CALIBRATE_ORIGINIAL
    M402

#.................................................................................................................
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUERY_PROBE
    {% if printer.probe.last_query %}
        M118 Fetching Euclid Probe.
        _PROBE_DEPLOY
    {% endif %}
    QUAD_GANTRY_LEVEL_ORIGINIAL
    G28
    M118 Stowing Euclid Probe.
    _PROBE_STOW
    QUERY_PROBE

#.................................................................................................................
[gcode_macro G3201]  # This one should be used instead of the normal G32 / QGL in the Print_start macro
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set defaultWN = printer["gcode_macro configvars"].defaultwarmnozzle|float %}
    {% set defaultMESH = printer["gcode_macro configvars"].name_mesh|int %}
    BED_MESH_CLEAR
    M104 S{defaultWN}
    G28
    QUERY_PROBE
    {% if printer.probe.last_query %}
        M118 Fetching Euclid Probe.
        _PROBE_DEPLOY
        #G28 Z.   <<---- normally not needed
    {% endif %}
    QUAD_GANTRY_LEVEL_ORIGINIAL
    BED_MESH_PROFILE LOAD={defaultMESH}
    G28 Z
    G90
    G0 X{X_MID} Y{Y_MID} F3500
    G91  
    G0 X-10 Y-10 F2500
    PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    _CHECK_PROBE2

[gcode_macro _CHECK_PROBE2]
gcode:
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G0 Z2 F500
    G0 X20 F2500
    PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    _CHECK_PROBE3 PASS={PROBE_PASS}

[gcode_macro _CHECK_PROBE3]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G0 Z2 F500
    G0 Y20 F2500
    PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    _CHECK_PROBE4 PASS={PROBE_PASS + PASS}

[gcode_macro _CHECK_PROBE4]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G0 Z2 F500
    G0 X-20 F2500
    PROBE samples_result=median samples=7 speed=5.0 samples_tolerance=0.050 samples_tolerance_retries=3 sample_retract_dist=2.0
    _CHECK_PROBE5 PASS={PROBE_PASS + PASS}

[gcode_macro _CHECK_PROBE5]
gcode:
    {% set PASS = params.PASS|float %}
    {% set PROBE_PASS = printer.probe.last_z_result %}
    G90
    G0 Z25 F3500
    _CHECK_PROBE6 PASS={(PROBE_PASS + PASS)/4}

[gcode_macro _CHECK_PROBE6]
gcode:
    {% set ZP_CAL = printer["gcode_macro configvars"].euclidzcompensation|float %}
    {% set PASS = params.PASS|float %}
    {% set Z_POS = printer.toolhead.position.z|float %}
    {% set Z_OFFSET = PASS - ZP_CAL|float %}
    {% set NEW_CURRENT_Z = (Z_POS - Z_OFFSET) %}
    M118 Current Average is: {PASS}
    M118 Z-Probe calibration is: {ZP_CAL}
    M118 Offset: {Z_OFFSET}
    {% if Z_OFFSET|abs > 1 %}
        M118 ! ! !  Z-OFFSET is > 1mm, check nozzle cleanliness and printer  ! ! !
        M118 Not applying calculated offset to Z.
      {% else %}
    M118 Setting current Z_Height of {Z_POS} to {NEW_CURRENT_Z}
    SET_KINEMATIC_POSITION Z={NEW_CURRENT_Z}
    G4 P1000
    M118 Moving nozzle to newly adjusted Z25.
    G0 Z25 F3500
    G4 P1000
      {% endif %}
    QUERY_PROBE
    {% if not printer.probe.last_query %}
        M118 Stowing Euclid Probe.
        _PROBE_STOW
    {% else %}
        M118 ?!Probe is not attached.
    {% endif %}